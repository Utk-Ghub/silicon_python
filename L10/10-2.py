# -*- coding: utf-8 -*-
print("■ ■ ■ ■ ■ ■ ■ ■ ■ ■ ■ ■ ■ ■ ■ ■ ■ ■")
print("■ Lesson10 応用編 コンフィグとロギング ■")
print("■ ■ ■ ■ ■ ■ ■ ■ ■ ■ ■ ■ ■ ■ ■ ■ ■ ■")
print("")
print("10-2 ロギングの基本と適切な書き方")
print("-------------------------")
print("")

print("| ロギングの基本と適切な書き方")
print("----------------------------------------")
print("ログレベルが変更されずにログが出力されるため、全てのファイルを分割して10-2フォルダに格納した")
print("")
print("c10_2_1/ロギング:")
print("c10_2_2/ログレベルの変更:")
print("")

print("<ログの整形>")
print("c10_2_3/formatを使ったログの書き方:")
print("c10_2_4/%を使ったログの書き方:")
print("c10_2_5/%を使ったログの書き方:")
print("")

print("<ログをファイルに出力する>")
print("c10_2_6/ファイルにログを出力:")
print("")

print("| ロギングのフォーマットを設定しよう")
print("c10_2_7/ログを出力:")
print("c10_2_8/ログのフォーマットを変更:")
print("c10_2_9/ログのフォーマットを変更:")
print("")

print("| ロガーを作成してロギングしよう")
print("c10_2_10/ロガーの作成:")
print("c10_2_11/ロガーの名前を変更する:")
print("")

print("<ロガーを作成するときのコツ>")
print("c10_2_12_1.pyはlogtest.pyを3パターンで実行しており")
print("logtest.pyを上書きして最初の2パターンが消去されるため")
print("logtest.pyと10-2-12.pyを3パターンに分割した")
print("")

print("コード：logtest1.py/モジュール内のロガー")
print("c10_2_12_1/インポートしたモジュールのロガー:")

print("コード：logtest2.py/モジュール内で異なるログレベルの出力")
print("c10_2_12_2/インポートしたモジュールのロガー:")

print("コード：logtest3.py/モジュール内で異なるログレベルの設定")
print("c10_2_12_3/インポートしたモジュールのロガー:")
print("c10_2_13/ロガーの作成:")
print("")

print("| ハンドラーでログの出力先を設定しよう")
print("コード：logtest4.py/ハンドラーでログの出力先をファイルに設定")
print("c10_2_14/logtest4.pyのdo_somethingを実行:")
print("")

print("| フィルタを使ってログ出力の条件を設定しよう")
print("c10_2_15/フィルタを適用したロガーでログ出力:")
print("")

print("| ログの設定ファイルを作成しよう")
print("c10_2_16/ログの設定ファイルを読み込んで使用する:")
print("c10_2_17/ロガーの名前をsimpleExampleにして作成:")
print("c10_2_18/ログの設定を辞書型で行う:")
print("")

print("| ロギングの実践的な書き方を学ぼう")
print("<ログを辞書型で出力する>")
print("c10_2_19/ログを辞書型で出力する:")
print("")

print("<どこにロギング処理を書けばよいのか>")
print("コード：ranking.py/ロガーの作成:")
print("コード：ranking.py/saveメソッドにロギングを追加:")
print("コード：ranking.py/ログに出力する情報の追加（処理開始時）:")
print("コード：ranking.py/ログに出力する情報の追加（処理終了時）:")
print("コード：console.py/エラー時のロギング:")

print("----------------------------------------")
print("10-2終了")